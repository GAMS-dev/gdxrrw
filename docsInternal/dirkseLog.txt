Some helpful commands:
assume $rrw is the dir containing the package tree, i.e. the gdxrrw
directory.

on linux (ike), we are trying
gg2 alpha ; gup ; gll  (to put a GAMS sysdir in the PATH)
OR
you can have one set via an R .First function
cd $rrw
R CMD INSTALL -l ~/R/x86_64-redhat-linux-gnu-library/2.11 gdxrrw
R CMD REMOVE gdxrrw  {to remove, or undo an install}
R CMD check gdxrrw
R CMD build gdxrrw
R CMD build gdxrrw --binary {what we want to avoid user compiling}
# it works better to check the clean tarball, one we might distribute
R CMD build gdxrrw && R CMD check gdxrrw_1.0.tar.gz ; echo "check rc = $?"

or on Windows, we are trying

R CMD INSTALL -l C:\R\2.12 gdxrrw
R CMD REMOVE  -l C:\R\2.12 gdxrrw  {to remove, or undo an install}
R CMD build gdxrrw --binary {what we want to avoid user compiling}

-- these didn't work so well
R CMD INSTALL -l C:\R\2.12 --no-multiarch gdxrrw
R --arch=x64 CMD INSTALL -l C:\R\2.12 gdxrrw


> .First <- function() { library(gdxrrw) ; igdx("/home/steve/leg_alpha/gmstest")}
> library(gdxrrw)  but this can go in .First as above
> l2 <- list(name='f');
> o <- rgdx('trnsport.gdx',l2);
> o$uels <- NULL
> wgdx('ttt',o)
